version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
  - AIRFLOW_VAR_DATA_PATH=/home/kbrodt/edu/made-ml-in-prod-2021/airflow_ml_dags/data        # to change
  - AIRFLOW_VAR_CONFIGS_PATH=/home/kbrodt/edu/made-ml-in-prod-2021/airflow_ml_dags/configs  # to change
  - AIRFLOW_VAR_MODEL_PATH=/data/models/2021-05-22/model.pkl                                # to change
  - AIRFLOW_VAR_NETWORK=airflow-net                                                         # to change
  - AIRFLOW_VAR_MLFLOW_TRACKING_URI=http://mlflow:5000                                      # to change

x-airflow-image: &airflow_image apache/airflow:2.0.0-python3.6
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    networks:
      - airflow-net
    ports:
      - "5432:5432"

  init:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    networks:
      - airflow-net
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: >-
      -c 'airflow db init
      && airflow users create
      --username admin --password admin
      --firstname Anonymous --lastname Admin
      --role Admin --email admin@example.org
      && airflow connections add fs_default --conn-type fs'

  webserver:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    restart: always
    depends_on:
      - postgres
    networks:
      - airflow-net
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver

  scheduler:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    networks:
      - airflow-net
    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
      - ./dags/:/opt/airflow/dags/
      - ./configs/airflow.cfg:/opt/airflow/airflow.cfg
      - ./data/:/data/  # to change
      - /var/run/docker.sock:/var/run/docker.sock
    environment: *airflow_environment
    command: scheduler

  data_download:
    build:
      context: images/airflow-data-download
    image:
      airflow-data-download
    restart: "no"

  ml_pipeline:
    build:
      context: images/airflow-ml-pipeline
    image:
      airflow-ml-pipeline
    restart: "no"

  mlflow:
    build:
      context: images/airflow-mlflow
    image:
      airflow-mlflow
    networks:
      - airflow-net
    restart: always
    ports:
        - "5000:5000"
    command: 'mlflow server --backend-store-uri ./mlflow --host 0.0.0.0 --port 5000'

volumes:
  logs:

networks:
  airflow-net:
    name: airflow-net
